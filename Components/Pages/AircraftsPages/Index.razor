@page "/Aeronaves/Index"
@rendermode InteractiveServer
@inject AeronaveService aeronaveService
@inject NavigationManager navigation

<PageTitle>Aeronaves</PageTitle>

<div class="container">
    <div class="card mb-4">
        <div class="card-header bg-morado text-white">
            <h3 class="mb-0"><i class="bi bi-airplane-fill me-2"></i><strong>Registro de aeronaves</strong></h3>
        </div>

        <div class="card-body">
            <div class="row mb-3">
                <div class="col-md-3">
                    <label for="filtro" class="form-label"><strong>Filtrar por:</strong></label>
                    <InputSelect id="filtro" class="form-select" @bind-Value="filtro">
                        <option value="id">ID</option>
                        <option value="Tipo">Tipo de Aeronave</option>
                        <option value="Aerolinea">Aerolinea</option>
                        <option value="Matricula">Matricula</option>
                    </InputSelect>
                </div>
                <div class="col-md-6">
                    <label for="valorFiltro" class="form-label"><strong>Búsqueda:</strong></label>
                    <div class="input-group">
                        <button @onclick="Limpiar" class="btn btn-outline-secondary" type="button">
                            <i class="bi bi-arrow-clockwise"></i>
                        </button>
                        <InputText id="valorFiltro" @bind-Value="valorFiltro" class="form-control" placeholder="Buscar" />
                        <button @onclick="Buscar" class="btn btn-outline-success" type="button">
                            <i class="bi bi-search me-1"></i> Buscar
                        </button>
                    </div>
                </div>
                <div class="col-md-3 d-flex align-items-end">
                    <a href="/Aeronaves/Create" class="btn btn-outline-success w-100">
                        <i class="bi bi-plus-square-fill me-1"></i> Crear
                    </a>
                </div>
            </div>

            <div class="table-responsive">
                <table class="table table-striped table-bordered">
                    <thead class="bg-morado text-white">
                        <tr>
                            <th class="text-center">Aeronave ID</th>
                            <th class="text-center">Fecha de registro</th>
                            <th class="text-center">Identificador</th>
                            <th class="text-center">Tipo Aeronave</th>
                            <th class="text-center">Categoria</th>
                            <th class="text-center">Aerolinea</th>
                            <th class="text-center">Matricula</th>
                            <th class="text-center">Ruta</th>
                            <th class="text-center">Imagen</th>
                            <th class="text-center">Detalles</th>
                            <th class="text-center">Modificar</th>
                            <th class="text-center">Eliminar</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (aeronaves != null && aeronaves.Any())
                        {
                            @foreach (var aeronave in aeronaves)
                            {
                                <tr>
                                    <td class="text-center">@aeronave.AeronavesId</td>
                                    <td class="text-center">@aeronave.Fecha.ToShortDateString()</td>
                                    <td class="text-center">@aeronave.Identificador</td>
                                    <td class="text-center">@aeronave.TipoAeronave</td>
                                    <td class="text-center">@aeronave.categoria</td>
                                    <td class="text-center">@aeronave.Aerolinea</td>
                                    <td class="text-center">@aeronave.Matricula</td>
                                    <td class="text-center">@aeronave.ruta</td>
                                    <td class="text-center">
                                        @if (aeronave.Imagen != null)
                                        {
                                            <img src="data:image/png;base64,@Convert.ToBase64String(aeronave.Imagen)"
                                                 alt="Imagen"
                                                 style="max-height: 50px; max-width: 50px; cursor: pointer;"
                                                 class="img-thumbnail"
                                                 @onclick="() => AbrirModal(aeronave.Imagen)" />
                                        }
                                        else
                                        {
                                            <span class="text-muted">Sin imagen</span>
                                        }
                                    </td>
                                    <td class="text-center">
                                        <a href="/Aeronaves/Details/@aeronave.AeronavesId" class="btn btn-outline-info btn-sm">
                                            <i class="bi bi-eye"></i>
                                        </a>
                                    </td>
                                    <td class="text-center">
                                        <a href="/Aeronaves/Edit/@aeronave.AeronavesId" class="btn btn-outline-warning btn-sm">
                                            <i class="bi bi-pencil-square"></i>
                                        </a>
                                    </td>
                                    <td class="text-center">
                                        <a href="/Aeronaves/Delete/@aeronave.AeronavesId" class="btn btn-outline-danger btn-sm">
                                            <i class="bi bi-trash"></i>
                                        </a>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="12" class="text-center">No hay aeronaves registradas</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            @if (!string.IsNullOrEmpty(mensaje))
            {
                <div class="alert alert-warning text-center mt-3">
                    @mensaje
                </div>
            }

            <div class="mt-3">
                <p><strong>Aeronaves Registradas: </strong>@(aeronaves?.Count ?? 0)</p>
            </div>
        </div>
    </div>
</div>

@* Modal para ver imagen grande *@
@if (mostrarModal)
{
    <div class="modal fade show d-block" style="background-color: rgba(0,0,0,0.5);" @onclick="CerrarModal">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content" @onclick:stopPropagation>
                <div class="modal-header">
                    <h5 class="modal-title">Imagen de Aeronave</h5>
                    <button type="button" class="btn-close" @onclick="CerrarModal"></button>
                </div>
                <div class="modal-body text-center">
                    <img src="data:image/png;base64,@Convert.ToBase64String(imagenSeleccionada)"
                         alt="Imagen Grande"
                         class="img-fluid" />
                </div>
            </div>
        </div>
    </div>
}

@code {
    private List<Aeronaves> aeronaves = new List<Aeronaves>();
    private string filtro = "id";
    private string valorFiltro = "";
    private string mensaje = "";
    private bool mostrarModal = false;
    private byte[]? imagenSeleccionada;

    protected override async Task OnInitializedAsync()
    {
        await CargarAeronaves();
    }

    private async Task CargarAeronaves()
    {
        try
        {
            aeronaves = await aeronaveService.Listar(a => true);
        }
        catch (Exception ex)
        {
            mensaje = "Error al cargar las aeronaves: " + ex.Message;
        }
    }

    public async Task Buscar()
    {
        try
        {
            if (!string.IsNullOrWhiteSpace(valorFiltro))
            {
                switch (filtro)
                {
                    case "id":
                        if (int.TryParse(valorFiltro, out int id))
                        {
                            aeronaves = await aeronaveService.Listar(t => t.AeronavesId == id);
                        }
                        else
                        {
                            mensaje = "El ID debe ser un número válido";
                        }
                        break;
                    case "Matricula":
                        aeronaves = await aeronaveService.Listar(t => t.Matricula.Contains(valorFiltro, StringComparison.OrdinalIgnoreCase));
                        break;
                    case "Aerolinea":
                        aeronaves = await aeronaveService.Listar(t => t.Aerolinea.Contains(valorFiltro, StringComparison.OrdinalIgnoreCase));
                        break;
                    case "Tipo":
                        aeronaves = await aeronaveService.Listar(t => t.TipoAeronave.Contains(valorFiltro, StringComparison.OrdinalIgnoreCase));
                        break;
                }
            }
            else
            {
                await CargarAeronaves();
            }

            if (aeronaves == null || !aeronaves.Any())
            {
                mensaje = "No se han encontrado aeronaves";
            }
            else
            {
                mensaje = "";
            }
        }
        catch (Exception ex)
        {
            mensaje = "Error en la búsqueda: " + ex.Message;
        }
    }

    public async Task Limpiar()
    {
        valorFiltro = string.Empty;
        filtro = "id";
        await CargarAeronaves();
        mensaje = "";
    }

    private void AbrirModal(byte[] imagen)
    {
        imagenSeleccionada = imagen;
        mostrarModal = true;
    }

    private void CerrarModal()
    {
        mostrarModal = false;
        imagenSeleccionada = null;
    }
}