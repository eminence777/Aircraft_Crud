@page "/Aeronaves/Delete/{AeronavesId:int}"
@rendermode InteractiveServer
@inject AeronaveService aeronaveService
@inject NavigationManager navigation

<PageTitle>Eliminar aeronaves</PageTitle>
<EditForm Model="aeronaves" OnValidSubmit="EliminarAeronave">
	<DataAnnotationsValidator />
	<div class="container">
		<div class="card shadow-lg">
			<div class="card-header bg-danger text-white">
				<h4><strong>Eliminar aeronave</strong></h4>
			</div>
			<div class="card-body">
				<h6><strong>Est&aacute;s seguro que quieres eliminar esta aeronave?</strong></h6>

				<div class="mb-1">
					<p class="mb-0"><strong>Aeronave ID:</strong> @aeronaves.AeronavesId</p>
				</div>
				<div class="mb-1">
					<p class="mb-0">Fecha de registro:<strong></strong> @aeronaves.Fecha</p>
				</div>
				<div class="mb-1">
					<p class="mb-0"><strong>Identificador:</strong> @aeronaves.Identificador</p>
				</div>
				<div class="mb-1">
					<p class="mb-0"><strong>Tipo aeronave:</strong> @aeronaves.TipoAeronave</p>
				</div>
				<div class="mb-1">
					<p class="mb-0"><strong>Aerolinea:</strong> @aeronaves.Aerolinea</p>
				</div>
				<div class="mb-1">
					<p class="mb-0"><strong>Matricula:</strong> @aeronaves.Matricula</p>
				</div>
				<div class="mb-1">
					<p class="mb-0"><strong>Ruta:</strong> @aeronaves.ruta</p>
				</div>


				@* Imagen debajo de la ruta *@
				@if (aeronaves.Imagen != null)
				{
					<div class="mt-3 text-center">
						<img src="data:image/png;base64,@Convert.ToBase64String(aeronaves.Imagen)"
							 alt="Imagen Aeronave"
							 class="img-fluid img-thumbnail"
							 style="max-height: 300px;" />
					</div>
				}


				<div class="card-footer">
					<button type="button" class="btn btn-danger bi bi-trash" @onclick="EliminarAeronave"> Eliminar</button>
					<button type="button" class="btn btn-info text-white bi bi-arrow-90deg-left" @onclick="Volver"> Volver</button>
				</div>
			</div>
		</div>
	</div>

</EditForm>

@code {

	[Parameter]
	public int AeronavesId { get; set; }
	public Aeronaves aeronaves { get; set; } = new Aeronaves();


	protected override async Task OnInitializedAsync()
	{
		if (AeronavesId > 0)
		{
			aeronaves = (await aeronaveService.Buscar(AeronavesId));

		}
	}

	public async Task EliminarAeronave()
	{
		var eliminar = await aeronaveService.Eliminar(aeronaves.AeronavesId);
		if (eliminar)
		{
			Volver();
		}


	}

	public void Volver()
	{
		navigation.NavigateTo("/Aeronaves/Index");
	}



}
